package com.mycompany.midsum2_redacted;

public class MidSum2_REDACTED extends javax.swing.JFrame {
    
    Fraction firstFraction = new Fraction();
    Fraction secondFraction = new Fraction();

    public MidSum2_REDACTED() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNumerator = new javax.swing.JTextField();
        firstDenominator = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        secondNumerator = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        secondDenominator = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTextArea = new javax.swing.JTextArea();
        addButton = new javax.swing.JButton();
        multiplyButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fractions | REDACTED, BCS11");

        firstNumerator.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        firstNumerator.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        firstDenominator.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        firstDenominator.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        secondNumerator.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        secondNumerator.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        secondDenominator.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        secondDenominator.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        resultTextArea.setColumns(20);
        resultTextArea.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        resultTextArea.setRows(5);
        resultTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(resultTextArea);

        addButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        multiplyButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        multiplyButton.setText("Multiply");
        multiplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiplyButtonActionPerformed(evt);
            }
        });

        resetButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(firstNumerator)
                            .addComponent(firstDenominator)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2)
                            .addComponent(secondNumerator)
                            .addComponent(secondDenominator, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(multiplyButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(firstNumerator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstDenominator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(multiplyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(secondNumerator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secondDenominator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        int firstNumInt, firstDenInt, secondNumInt, secondDenInt;
        try {
            if (firstNumerator.getText().equals("") ||
                firstNumerator.getText().matches(".*[a-z.].*"))
                firstNumInt = 0;
            else
                firstNumInt = Integer.parseInt(firstNumerator.getText());
            if (firstDenominator.getText().equals("") ||
                firstDenominator.getText().matches(".*[a-z.].*"))
                firstDenInt = 0;
            else
                firstDenInt = Integer.parseInt(firstDenominator.getText());
            if (secondNumerator.getText().equals("") ||
                secondNumerator.getText().matches(".*[a-z.].*"))
                secondNumInt = 0;
            else
                secondNumInt = Integer.parseInt(secondNumerator.getText());
            if (secondDenominator.getText().equals("") ||
                secondDenominator.getText().matches(".*[a-z.].*"))
                secondDenInt = 0;
            else
                secondDenInt = Integer.parseInt(secondDenominator.getText());
            firstFraction.setNumerator(firstNumInt);
            firstFraction.setDenominator(firstDenInt);
            secondFraction.setNumerator(secondNumInt);
            secondFraction.setDenominator(secondDenInt);
        } catch (Exception e) {
            String result = firstFraction.addFraction(secondFraction.getNumerator(), secondFraction.getDenominator());           
            resultTextArea.setText
                ("The sum of " + firstFraction.toString() 
                + " + " + secondFraction.toString() + " is "
                + result + ".\nThe answer cannot be simplified.");
        }
        
        if (firstDenominator.getText().equals("0") ||
            firstDenominator.getText().equals("") ||
            secondDenominator.getText().equals("0") ||
            secondDenominator.getText().equals("") ||
            firstDenominator.getText().matches(".*[a-z].*") ||
            secondDenominator.getText().matches(".*[a-z.].*")) {
            resultTextArea.setText
                ("The sum of " + firstFraction.toString() 
                + " + " + secondFraction.toString() 
                + " is undefined.\nThe answer cannot be simplified.");
        } else {
            String result = firstFraction.addFraction(secondFraction.getNumerator(), secondFraction.getDenominator());
            String[] numeratorDenominator = result.split("/");
            int resultNumerator = Integer.parseInt(numeratorDenominator[0]);
            int resultDenominator = Integer.parseInt(numeratorDenominator[1]);
            String simplifiedResult = firstFraction.simplifyFraction(resultNumerator, resultDenominator);
            
            if (numeratorDenominator[0].equals("0")) {
                resultTextArea.setText
                    ("The sum of " + firstFraction.toString() + " + "
                    + secondFraction.toString() + " is " + result
                    + ".\nSimplified: 0");
            } else if (result.equals(simplifiedResult)) {
                resultTextArea.setText
                    ("The sum of " + firstFraction.toString() + " + "
                    + secondFraction.toString() + " is " + result
                    + ".\nThe answer cannot be simplified.");
            } else {
                resultTextArea.setText
                    ("The sum of " + firstFraction.toString()
                    + " + " + secondFraction.toString() + " is " + result 
                    + ".\nSimplified: " + simplifiedResult);
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void multiplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiplyButtonActionPerformed
        int firstNumInt, firstDenInt, secondNumInt, secondDenInt;
        try {
            if (firstNumerator.getText().equals("") ||
                firstNumerator.getText().matches(".*[a-z.].*"))
                firstNumInt = 0;
            else
                firstNumInt = Integer.parseInt(firstNumerator.getText());
            if (firstDenominator.getText().equals("") ||
                firstDenominator.getText().matches(".*[a-z.].*"))
                firstDenInt = 0;
            else
                firstDenInt = Integer.parseInt(firstDenominator.getText());
            if (secondNumerator.getText().equals("") ||
                secondNumerator.getText().matches(".*[a-z.].*"))
                secondNumInt = 0;
            else
                secondNumInt = Integer.parseInt(secondNumerator.getText());
            if (secondDenominator.getText().equals("") ||
                secondDenominator.getText().matches(".*[a-z.].*"))
                secondDenInt = 0;
            else
                secondDenInt = Integer.parseInt(secondDenominator.getText());
            firstFraction.setNumerator(firstNumInt);
            firstFraction.setDenominator(firstDenInt);
            secondFraction.setNumerator(secondNumInt);
            secondFraction.setDenominator(secondDenInt);
        } catch (Exception e) {
            String result = firstFraction.multiplyFraction(secondFraction.getNumerator(), secondFraction.getDenominator());
            resultTextArea.setText
                ("The product of " + firstFraction.toString()
                + " * " + secondFraction.toString() + " is "
                + result + ".\nThe answer cannot be simplified.");
        }
        
        if (firstDenominator.getText().equals("0") ||
            firstDenominator.getText().equals("") ||
            secondDenominator.getText().equals("0") ||
            secondDenominator.getText().equals("") ||
            firstDenominator.getText().matches(".*[a-z-].*") ||
            secondDenominator.getText().matches(".*[a-z.].*")) {
            resultTextArea.setText
                ("The product of " + firstFraction.toString()
                + " * " + secondFraction.toString()
                + " is undefined.\nThe answer cannot be simplified.");
        } else {
            String result = firstFraction.multiplyFraction(secondFraction.getNumerator(), secondFraction.getDenominator());
            String[] numeratorDenominator = result.split("/");
            int resultNumerator = Integer.parseInt(numeratorDenominator[0]);
            int resultDenominator = Integer.parseInt(numeratorDenominator[1]);
            String simplifiedResult = firstFraction.simplifyFraction(resultNumerator, resultDenominator);
            
            if (numeratorDenominator[0].equals("0")) {
                resultTextArea.setText
                    ("The product of " + firstFraction.toString()
                    + " * " + secondFraction.toString() + " is "
                    + result + ".\nSimplified: 0");
            } else if (result.equals(simplifiedResult)) {
                resultTextArea.setText
                    ("The product of " + firstFraction.toString()
                    + " * " + secondFraction.toString() + " is "
                    + result + ".\nThe answer cannot be simplified.");
            } else {
                resultTextArea.setText
                    ("The product of " + firstFraction.toString()
                    + " * " + secondFraction.toString() + " is "
                    + result + ".\nSimplified: " + simplifiedResult);
            }
        }
    }//GEN-LAST:event_multiplyButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        firstNumerator.setText("");
        firstDenominator.setText("");
        secondNumerator.setText("");
        secondDenominator.setText("");
        resultTextArea.setText("");
        firstFraction.setNumerator(0);
        firstFraction.setDenominator(0);
        secondFraction.setNumerator(0);
        secondFraction.setDenominator(0);
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MidSum2_REDACTED.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MidSum2_REDACTED.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MidSum2_REDACTED.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MidSum2_REDACTED.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MidSum2_REDACTED().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField firstDenominator;
    private javax.swing.JTextField firstNumerator;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton multiplyButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextArea resultTextArea;
    private javax.swing.JTextField secondDenominator;
    private javax.swing.JTextField secondNumerator;
    // End of variables declaration//GEN-END:variables
}
